<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wDP0tgCo7naKoKFigpVVVUCUVFRAFFRUQBRUVEAUVFRANzc3AD///8A////AP//
        /wD///8A////AP///wD///8AhISEACU6Wio0d9ezY3maXCUlJwYAAAAAAAAAAAAAAADMzMwA////AP//
        /wD///8A////AP///wD///8A////AISEhAAAAAAAARc1IDNvydOPma6rJiQkEAAAAAAAAAAAzMzMAP//
        /wD///8A////AP///wD///8A////AP///wCEhIQAAAAAAAAAAAAQITwka3if57upn8EtKigOAAAAAMzM
        zAD///8A////AP///wD///8A////AP///wD///8AhISEAAAAAAAAAAAAAAAAAD48SEytgWT/t5+KlwwM
        DALMzMwA////AP///wD///8A////AP///wD///8A////AISEhAAAAAAAAAAAAAAAAAAFBAQCrHdRydeT
        We9oY18azMzMAP///wD///8A////AP///wD///8A////AP///wCEhIQAAAAAAAAAAAAAAAAADAoKCq93
        TdHPezLx0L+wGszMzAD///8A////AP///wD///8A////AP///wD///8AhISEAAAAAAAAAAAAGSpJMHVu
        gMmyd0n1hVAjYoSDgwTMzMwA////AP///wD///8A////AP///wD///8A////AISEhAAABxICCUKWbj1v
        xPdrZXO5NCQZIgAAAAAAAAAAzMzMAP///wD///8A////AP///wD///8A////AP///wCUlJQCM2q4ZA1s
        9f03Yq2tCwwRBgAAAAAAAAAAAAAAAMzMzAD///8A////AP///wD///8A////AP///wD///8Am5ubAmyh
        7ZkSbfP/LlSSkQAAAAIAAAAAAAAAAAAAAADMzMwA////AP///wD///8A////AP///wD///8A////AISE
        hABweodESo3x+Utwte8qKC4oAAAAAAAAAAAAAAAAzMzMAP///wD///8A////AP///wD///8A////AP//
        /wCEhIQACAgIArG9z3Rvh7n5iW9p0SsbDhYAAAAAAAAAAMzMzAD///8A////AP///wD///8A////AP//
        /wD///8AhISEAAAAAAAREREEwMLHXquRheG6cjXLMBwKHAAAAADMzMwA////AP///wD///8A////AP//
        /wD///8A////AISEhAAAAAAAAAAAAAwMCwKAfn0gw6GEicV9P8MwHQsozMzMAP///wD///8A////AP//
        /wD///8A////AP///wCEhIQAAAAAAAAAAAAAAAAAAAAAAB8fHwSLhX8e3LiYRunk3wT///8A////AP//
        /wD///8A//8AAPv/AAD8/wAA/n8AAP8/AAD/PwAA/z8AAP5/AAD8/wAA+f8AAPH/AAD5/wAA/P8AAP5/
        AAD/PwAA//8AAA==
</value>
  </data>
</root>