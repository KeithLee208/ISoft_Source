<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAACAgAAABAAgAqAgAAJ4FAAAwMAAAAQAIAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AADAwMAAwNzAAPDKpgAAAAAAzDMAAJlmMwDMZgAA/2YAAMxmMwBmmWYAzJkAAP+ZAADMmTMAmcwzAP/M
        AAD//wAA/8wzAP//MwCZmWYAmcxmAP//zAA3EgUAPhMGADAQCAA8FQoANBoNAC8REQAiHBoALBwYADIV
        EAApIR0ANCAXADojFgAzIhoAOiMfACYjIgAsJiUALSglACwrKgAyJyQAMysmAD4qJAAxLSsAOCsoADcx
        LAA4NTQARQUDAEcLBQBLCgMAUgcDAFMNAwBeCgMARRMFAE0XCQBLGQkAVxcGAFwTBwBaHwkAYAwEAGoU
        BQBiHAUAbRsFAGIcCwB8FgUASiwbAF8qFgBNMR0AYyIOAGolDABzJQwAeywOAGYpEgB6JxAAbTscAHk7
        GgBLNSUAQDQtAEQ4LgBXOykAQTUxAEM4MwBMOTMAQz06AFI8NABJQj0AUkk2AFJEOwBaRTwAd0IiAEpG
        RQBVSkUAV1JPAFxSTABXVFIAZExEAGBTQwB2X1YAeWdaAGViYQBzaGMAhR8DAJMfBgCDKwkAii4PAJgk
        CACLMQ8AkigRAIMzEgCTNBMAmzUTAJw6EgCUNRsAmjofAKM+FQCpPBMApzgYAJJDFwCkQBcArEUUAKFD
        GACrRBoArEwcALhKFwCwRxwAu00aAIRMJwCdRiUAj1UwAJRcNACrTCMAslQkALlcJwCzVSsAu1soALVX
        MwCOYjsAv2MoALdxPgDCWygAxWo0AMltNADHazkAy3M6AJ1vRACrbkEAu2xHALV/VQDHbUEAx3dEAM94
        QwDGc0sAxnlJANR+RADBd1EAsJBkAMiFTwDciEkA14tUANmSWgDgjkwA5ppbANCJYwDVl3cA559gANii
        fgDrpGUA+K1qAO2ucgDzrXAA7rd7APS2ewCnlYYAraCIAN2tkADpu4cA9b2FAOK3mgDPt6oA0rqrAOO+
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU
        FRkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABQQFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFA8UEhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABkSFxIUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYDxISFBgUFAAAAAAAAAAAAAAUDw8NAAAAAAAA
        AAAAABQUFBQVFhcWGAAAAAAAABQPEhIWFgAAAAAAAAAUFBkUFAAUEhcXFxcPFBQUDw8SEhYWAAAAAAAA
        AAAAAAsWGRQLDxITExcXFxcTExMSFhYAAAAAAAAAAAAAAAAACxcPAAAPEBIaGhoaFhIQDRYAAAAAAAAA
        AAAAAAAAAAANEhIUAAAYFBQUFA8NAAAAAAAAAAAAAAAAAAAAAAAAAAASEhIPDw8PDxQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA4SEhISEhISEgsUAAAAAAAAAAAAAAAAAAAAAAAAAAAACxIRERISEhISEgsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADhERDg4ODhERCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAALERIRDg4ODg4L
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOEhIODg4ODg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOEhYO
        DAwOCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFhYQDA4ODwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAOFhoSDA4ODQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEhoWDgwOEAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAALCxYWEg4MDA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQsQEg4MDA4PAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAABQLCw4ODAwMDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQsLDAwMDg0A
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCwsMDAwLFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        FAsLDAwMDA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCwsMDA0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABQLDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////P////j////x
        ////4////wf///4P///8A/8P/AH4H8EAAP/AAAf/xgAf/8MB///gD///4AP//+AD///wA///8AP///gD
        ///8A////gH///8A////gH///8Af///wB////AH///+Af///4A////wD////gf////H/////KAAAADAA
        AABgAAAAAQAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AADAwMAAwNzAAPDKpgAAAAAACwQDAA4KCgATBAIAHAQDABIKBAARDQwAGQsLABkTDQAXFhYAIQMCACkF
        BAAjCwQALAkEACQKCQAtDggANwsDACMQDgA3EgUAPhMGADAQCAA8FQoANBoNAC8REQAiHBoALBwYADIV
        EAApIR0ANCAXADojFgAzIhoAOiMfACYjIgAsJiUALSglACwrKgAyJyQAMysmAD4qJAAxLSsAOCsoADcx
        LAA4NTQARQUDAEcLBQBLCgMAUgcDAFMNAwBeCgMARRMFAE0XCQBLGQkAVxcGAFwTBwBaHwkAYAwEAGoU
        BQBiHAUAbRsFAGIcCwB8FgUASiwbAF8qFgBNMR0AYyIOAGolDABzJQwAeywOAGYpEgB6JxAAbTscAHk7
        GgBLNSUAQDQtAEQ4LgBXOykAQTUxAEM4MwBMOTMAQz06AFI8NABJQj0AUkk2AFJEOwBaRTwAd0IiAEpG
        RQBVSkUAV1JPAFxSTABXVFIAZExEAGBTQwB2X1YAeWdaAGViYQBzaGMAhR8DAJMfBgCDKwkAii4PAJgk
        CACLMQ8AkigRAIMzEgCTNBMAmzUTAJw6EgCUNRsAmjofAKM+FQCpPBMApzgYAJJDFwCkQBcArEUUAKFD
        GACrRBoArEwcALhKFwCwRxwAu00aAIRMJwCdRiUAj1UwAJRcNACrTCMAslQkALlcJwCzVSsAu1soALVX
        MwCOYjsAv2MoALdxPgDCWygAxWo0AMltNADHazkAy3M6AJ1vRACrbkEAu2xHALV/VQDHbUEAx3dEAM94
        QwDGc0sAxnlJANR+RADBd1EAsJBkAMiFTwDciEkA14tUANmSWgDgjkwA5ppbANCJYwDVl3cA559gANii
        fgDrpGUA+K1qAO2ucgDzrXAA7rd7APS2ewCnlYYAraCIAN2tkADpu4cA9b2FAOK3mgDPt6oA0rqrAOO+
        qgDrwIcA8sSKAPHKkwDz05wA3864AOjGpQDwyqYA9NqmAOLHtwDt0r8A9tu5APXgrQD147EA8trEAPjj
        xAD66NUA+/TaAPnu5QD9+OcA/v37AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKSg
        oACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AEtVbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAtMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0sAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCUAAAAAAAAAAAAAAAAAAAAA
        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
        kYx4TRwLIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTKUN/gX11Sx0QYwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwHW2DfXhuDisAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFooPmtsOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAFghDi0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////8AAP//+////wAA///3////AAD//+////8AAP//z////wAA//+f////AAD//z////8AAP/w
        f////wAA/+B/////AAD/wP////8AAP/B///4fwAA/wYP/8D/AAD/+A/8A/8AAP7wA4Af/wAAxgAAAP//
        AADHAAAH//8AAMeAAB///wAAw+AA////AADB/g////8AAMAB/////wAAwAB/////AADgAB////8AAOAA
        D////wAA4AAP////AADwAA////8AAPAAD////wAA+AAf////AAD4AB////8AAPwAH////wAA/gAP////
        AAD/AAf///8AAP+AA////wAA/8AB////AAD/4AB///8AAP/4AD///wAA//4AD///AAD//4AD//8AAP//
        4AD//wAA///8AD//AAD///+AD/8AAP////AB/wAA/////AB/AAD/////gA8AAP/////wBwAA//////wH
        AAD//////4cAAP///////wAA////////AAA=
</value>
  </data>
</root>